import{lookup}from"./lookupTable";import{newRoute,getMatch}from"./route";import{getURLParts}from"./url";import{action}from"stump";let routesState=[],routesByName={};export function getRouteByName(t){return routesByName[t]}export function getRouteMatch(t){const e=getURLParts(t);let o=null;return routesState.some(t=>(o=getMatch(t,e),null!=o)),o}export function setRoutes(t){const e=[];t.forEach(t=>e.push(newRoute(t))),routesByName=lookup(e),routesState=e}export const pushURL=t=>(e,o)=>dispatchURL(t)(o);export const dispatchURL=({title:t="",url:e=""})=>o=>{history.pushState({},t,e),o(setCurrentRoute)};export const dispatchCurrentRoute=t=>t(setCurrentRoute);export const setRoute=t=>action(e=>setMatch(e,t));export const setCurrentRoute=t=>{const e=document.location.pathname,o=getRouteMatch(e);if(null===o)throw"404: cannot find route match for "+e;const r=setMatch(t,o),u=o.route.onMatch;return u?u(r):r};const setMatch=(t,e)=>Object.assign(Object.assign({},t),{currentRoute:e.route,currentParams:e.params});